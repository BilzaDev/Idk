local llIIlIlIIllllIlIlIlIIlIlIlIllllIllI = {'\27','\76','\117','\97','\82','\0','\1','\4','\8','\4','\8','\0','\25','\147',
'\13','\10','\26','\10','\3','\0','\0','\0','\135','\0','\0','\0','\0','\0','\20','\130','\0','\0','\0','\6','\0','\64','\0',
'\7','\64','\64','\0','\24','\128','\64','\0','\23','\0','\31','\128','\6','\192','\64','\0','\70','\0','\64','\0','\76',
'\0','\193','\0','\193','\64','\1','\0','\93','\0','\128','\1','\29','\128','\0','\0','\29','\128','\128','\0','\71','\128',
'\65','\0','\129','\192','\1','\0','\193','\0','\2','\0','\93','\128','\128','\1','\140','\64','\194','\0','\1','\129','\2',
'\0','\157','\128','\128','\1','\204','\64','\194','\0','\65','\193','\2','\0','\221','\128','\128','\1','\6','\1','\64',
'\0','\12','\1','\67','\2','\129','\65','\3','\0','\29','\129','\128','\1','\7','\129','\67','\2','\71','\193','\67','\2',
'\140','\1','\68','\1','\1','\130','\2','\0','\157','\129','\128','\1','\203','\193','\0','\0','\6','\130','\68','\0','\7',
'\66','\68','\4','\7','\194','\68','\4','\202','\1','\130','\136','\6','\66','\69','\0','\7','\130','\69','\4','\65','\194',
'\5','\0','\129','\2','\6','\0','\193','\66','\6','\0','\29','\130','\0','\2','\202','\1','\2','\138','\202','\193','\70',
'\141','\6','\2','\71','\0','\7','\66','\71','\4','\65','\130','\7','\0','\134','\2','\64','\0','\135','\194','\71','\5',
'\29','\130','\128','\1','\10','\66','\72','\144','\70','\2','\71','\0','\71','\66','\199','\4','\129','\130','\8','\0','\192',
'\2','\0','\4','\93','\130','\128','\1','\134','\2','\73','\0','\135','\194','\72','\5','\74','\130','\130','\145','\134',
'\130','\73','\0','\135','\66','\71','\5','\193','\194','\9','\0','\1','\3','\10','\0','\65','\195','\9','\0','\129','\3',
'\10','\0','\157','\130','\128','\2','\74','\130','\130','\146','\74','\194','\201','\148','\135','\130','\198','\3','\74',
'\130','\2','\149','\139','\2','\0','\0','\229','\2','\0','\0','\8','\192','\130','\149','\229','\66','\0','\0','\8','\192',
'\2','\150','\204','\66','\75','\3','\65','\131','\11','\0','\129','\195','\11','\0','\203','\3','\128','\1','\1','\4','\12',
'\0','\65','\68','\12','\0','\129','\132','\12','\0','\228','\67','\128','\1','\37','\132','\0','\0','\221','\66','\0','\3',
'\204','\66','\75','\3','\65','\195','\12','\0','\129','\3','\13','\0','\203','\3','\0','\2','\1','\68','\12','\0','\65',
'\68','\13','\0','\129','\4','\12','\0','\193','\132','\13','\0','\228','\67','\0','\2','\37','\196','\0','\0','\221','\66',
'\0','\3','\8','\0','\206','\155','\204','\66','\78','\3','\65','\131','\14','\0','\129','\195','\14','\0','\229','\3','\1',
'\0','\221','\66','\128','\2','\204','\66','\78','\3','\65','\3','\15','\0','\129','\67','\15','\0','\229','\67','\1','\0',
'\221','\66','\128','\2','\204','\66','\78','\3','\65','\131','\15','\0','\129','\195','\15','\0','\229','\131','\1','\0',
'\221','\66','\128','\2','\204','\2','\196','\1','\65','\3','\16','\0','\221','\130','\128','\1','\12','\67','\208','\5',
'\129','\131','\16','\0','\193','\195','\16','\0','\1','\4','\17','\0','\65','\4','\10','\0','\165','\196','\1','\0','\29',
'\67','\128','\3','\12','\67','\208','\5','\129','\67','\17','\0','\193','\131','\17','\0','\1','\4','\17','\0','\65','\4',
'\10','\0','\165','\4','\2','\0','\29','\67','\128','\3','\87','\192','\255','\127','\31','\0','\128','\0','\71','\0','\0',
'\0','\4','\5','\0','\0','\0','\0','\0','\0','\0','\103','\97','\109','\101','\0','\4','\8','\0','\0','\0','\0','\0','\0',
'\0','\80','\108','\97','\99','\101','\73','\100','\0','\3','\0','\0','\0','\232','\2','\141','\162','\65','\4','\11','\0',
'\0','\0','\0','\0','\0','\0','\108','\111','\97','\100','\115','\116','\114','\105','\110','\103','\0','\4','\8','\0','\0',
'\0','\0','\0','\0','\0','\72','\116','\116','\112','\71','\101','\116','\0','\4','\73','\0','\0','\0','\0','\0','\0','\0',
'\104','\116','\116','\112','\115','\58','\47','\47','\114','\97','\119','\46','\103','\105','\116','\104','\117','\98','\117',
'\115','\101','\114','\99','\111','\110','\116','\101','\110','\116','\46','\99','\111','\109','\47','\120','\72','\101',
'\112','\116','\99','\47','\75','\97','\118','\111','\45','\85','\73','\45','\76','\105','\98','\114','\97','\114','\121',
'\47','\109','\97','\105','\110','\47','\115','\111','\117','\114','\99','\101','\46','\108','\117','\97','\0','\4','\10',
'\0','\0','\0','\0','\0','\0','\0','\67','\114','\101','\97','\116','\101','\76','\105','\98','\0','\4','\19','\0','\0','\0',
'\0','\0','\0','\0','\80','\114','\105','\115','\111','\110','\32','\76','\105','\102','\101','\32','\91','\66','\69','\84',
'\65','\93','\0','\4','\9','\0','\0','\0','\0','\0','\0','\0','\83','\101','\110','\116','\105','\110','\101','\108','\0',
'\4','\7','\0','\0','\0','\0','\0','\0','\0','\78','\101','\119','\84','\97','\98','\0','\4','\5','\0','\0','\0','\0','\0',
'\0','\0','\77','\97','\105','\110','\0','\4','\6','\0','\0','\0','\0','\0','\0','\0','\79','\116','\104','\101','\114','\0',
'\4','\11','\0','\0','\0','\0','\0','\0','\0','\71','\101','\116','\83','\101','\114','\118','\105','\99','\101','\0','\4',
'\8','\0','\0','\0','\0','\0','\0','\0','\80','\108','\97','\121','\101','\114','\115','\0','\4','\12','\0','\0','\0','\0',
'\0','\0','\0','\76','\111','\99','\97','\108','\80','\108','\97','\121','\101','\114','\0','\4','\10','\0','\0','\0','\0',
'\0','\0','\0','\67','\104','\97','\114','\97','\99','\116','\101','\114','\0','\4','\11','\0','\0','\0','\0','\0','\0','\0',
'\78','\101','\119','\83','\101','\99','\116','\105','\111','\110','\0','\4','\9','\0','\0','\0','\0','\0','\0','\0','\77',
'\97','\116','\101','\114','\105','\97','\108','\0','\4','\5','\0','\0','\0','\0','\0','\0','\0','\69','\110','\117','\109',
'\0','\4','\5','\0','\0','\0','\0','\0','\0','\0','\78','\101','\111','\110','\0','\4','\6','\0','\0','\0','\0','\0','\0',
'\0','\67','\111','\108','\111','\114','\0','\4','\7','\0','\0','\0','\0','\0','\0','\0','\67','\111','\108','\111','\114',
'\51','\0','\4','\8','\0','\0','\0','\0','\0','\0','\0','\102','\114','\111','\109','\82','\71','\66','\0','\3','\0','\0',
'\0','\0','\0','\0','\73','\64','\3','\0','\0','\0','\0','\0','\128','\100','\64','\3','\0','\0','\0','\0','\0','\0','\101',
'\64','\4','\13','\0','\0','\0','\0','\0','\0','\0','\84','\114','\97','\110','\115','\112','\97','\114','\101','\110','\99',
'\121','\0','\3','\102','\102','\102','\102','\102','\102','\230','\63','\4','\9','\0','\0','\0','\0','\0','\0','\0','\73',
'\110','\115','\116','\97','\110','\99','\101','\0','\4','\4','\0','\0','\0','\0','\0','\0','\0','\110','\101','\119','\0',
'\4','\10','\0','\0','\0','\0','\0','\0','\0','\83','\99','\114','\101','\101','\110','\71','\117','\105','\0','\4','\8',
'\0','\0','\0','\0','\0','\0','\0','\67','\111','\114','\101','\71','\117','\105','\0','\4','\15','\0','\0','\0','\0','\0',
'\0','\0','\73','\103','\110','\111','\114','\101','\71','\117','\105','\73','\110','\115','\101','\116','\0','\1','\1','\4',
'\14','\0','\0','\0','\0','\0','\0','\0','\86','\105','\101','\119','\112','\111','\114','\116','\70','\114','\97','\109',
'\101','\0','\4','\14','\0','\0','\0','\0','\0','\0','\0','\67','\117','\114','\114','\101','\110','\116','\67','\97','\109',
'\101','\114','\97','\0','\4','\10','\0','\0','\0','\0','\0','\0','\0','\119','\111','\114','\107','\115','\112','\97','\99',
'\101','\0','\4','\5','\0','\0','\0','\0','\0','\0','\0','\83','\105','\122','\101','\0','\4','\6','\0','\0','\0','\0','\0',
'\0','\0','\85','\68','\105','\109','\50','\0','\3','\0','\0','\0','\0','\0','\0','\240','\63','\3','\0','\0','\0','\0','\0',
'\0','\0','\0','\4','\23','\0','\0','\0','\0','\0','\0','\0','\66','\97','\99','\107','\103','\114','\111','\117','\110',
'\100','\84','\114','\97','\110','\115','\112','\97','\114','\101','\110','\99','\121','\0','\4','\18','\0','\0','\0','\0',
'\0','\0','\0','\73','\109','\97','\103','\101','\84','\114','\97','\110','\115','\112','\97','\114','\101','\110','\99',
'\121','\0','\4','\14','\0','\0','\0','\0','\0','\0','\0','\103','\101','\110','\101','\114','\97','\116','\101','\67','\104',
'\97','\115','\109','\0','\4','\12','\0','\0','\0','\0','\0','\0','\0','\99','\108','\101','\97','\114','\67','\104','\97',
'\115','\109','\115','\0','\4','\12','\0','\0','\0','\0','\0','\0','\0','\78','\101','\119','\68','\114','\111','\112','\100',
'\111','\119','\110','\0','\4','\10','\0','\0','\0','\0','\0','\0','\0','\71','\117','\110','\32','\71','\105','\118','\101',
'\114','\0','\4','\23','\0','\0','\0','\0','\0','\0','\0','\71','\105','\118','\101','\115','\32','\116','\104','\101','\32',
'\115','\101','\108','\101','\99','\116','\101','\100','\32','\103','\117','\110','\0','\4','\6','\0','\0','\0','\0','\0',
'\0','\0','\65','\75','\45','\52','\55','\0','\4','\3','\0','\0','\0','\0','\0','\0','\0','\77','\57','\0','\4','\14','\0',
'\0','\0','\0','\0','\0','\0','\82','\101','\109','\105','\110','\103','\116','\111','\110','\45','\56','\55','\48','\0',
'\4','\8','\0','\0','\0','\0','\0','\0','\0','\71','\117','\110','\32','\77','\111','\100','\0','\4','\17','\0','\0','\0',
'\0','\0','\0','\0','\77','\97','\107','\101','\115','\32','\116','\104','\101','\32','\103','\117','\110','\32','\111','\112',
'\0','\4','\14','\0','\0','\0','\0','\0','\0','\0','\82','\101','\109','\105','\110','\103','\116','\111','\110','\32','\56',
'\55','\48','\0','\4','\6','\0','\0','\0','\0','\0','\0','\0','\84','\97','\122','\101','\114','\0','\4','\8','\0','\0','\0',
'\0','\0','\0','\0','\101','\110','\97','\98','\108','\101','\100','\0','\1','\0','\4','\10','\0','\0','\0','\0','\0','\0',
'\0','\78','\101','\119','\66','\117','\116','\116','\111','\110','\0','\4','\10','\0','\0','\0','\0','\0','\0','\0','\69',
'\110','\97','\98','\108','\101','\69','\83','\80','\0','\4','\4','\0','\0','\0','\0','\0','\0','\0','\69','\83','\80','\0',
'\4','\18','\0','\0','\0','\0','\0','\0','\0','\68','\101','\115','\116','\114','\111','\121','\32','\97','\108','\108','\32',
'\68','\111','\111','\114','\115','\0','\4','\13','\0','\0','\0','\0','\0','\0','\0','\68','\101','\115','\116','\114','\111',
'\121','\68','\111','\111','\114','\115','\0','\4','\11','\0','\0','\0','\0','\0','\0','\0','\84','\80','\32','\84','\111',
'\32','\66','\97','\115','\101','\0','\4','\9','\0','\0','\0','\0','\0','\0','\0','\84','\80','\84','\111','\66','\97','\115',
'\101','\0','\4','\7','\0','\0','\0','\0','\0','\0','\0','\80','\108','\97','\121','\101','\114','\0','\4','\10','\0','\0',
'\0','\0','\0','\0','\0','\78','\101','\119','\83','\108','\105','\100','\101','\114','\0','\4','\10','\0','\0','\0','\0',
'\0','\0','\0','\87','\97','\108','\107','\115','\112','\101','\101','\100','\0','\4','\41','\0','\0','\0','\0','\0','\0',
'\0','\67','\104','\97','\110','\103','\101','\115','\32','\121','\111','\117','\114','\32','\119','\97','\108','\107','\32',
'\115','\112','\101','\101','\100','\32','\116','\111','\32','\97','\32','\115','\101','\116','\32','\97','\109','\111','\117',
'\110','\116','\46','\0','\3','\0','\0','\0','\0','\0','\64','\127','\64','\4','\10','\0','\0','\0','\0','\0','\0','\0','\74',
'\117','\109','\112','\112','\111','\119','\101','\114','\0','\4','\41','\0','\0','\0','\0','\0','\0','\0','\67','\104','\97',
'\110','\103','\101','\115','\32','\121','\111','\117','\114','\32','\106','\117','\109','\112','\32','\112','\111','\119',
'\101','\114','\32','\116','\111','\32','\97','\32','\115','\101','\116','\32','\97','\109','\111','\117','\110','\116','\46',
'\0','\9','\0','\0','\0','\34','\0','\0','\0','\57','\0','\0','\0','\1','\0','\16','\52','\0','\0','\0','\70','\0','\64',
'\0','\76','\64','\192','\0','\199','\128','\64','\0','\93','\128','\128','\1','\91','\0','\0','\0','\23','\0','\11','\128',
'\134','\192','\64','\0','\204','\0','\193','\0','\221','\0','\0','\1','\157','\0','\1','\0','\23','\64','\9','\128','\204',
'\65','\65','\3','\65','\130','\1','\0','\221','\129','\128','\1','\219','\65','\0','\0','\23','\0','\1','\128','\204','\65',
'\65','\3','\65','\194','\1','\0','\221','\129','\128','\1','\219','\1','\0','\0','\23','\192','\6','\128','\204','\1','\66',
'\3','\221','\129','\0','\1','\6','\194','\64','\0','\76','\2','\193','\3','\93','\2','\0','\1','\29','\2','\1','\0','\23',
'\128','\1','\128','\76','\67','\65','\6','\193','\67','\2','\0','\93','\131','\128','\1','\91','\3','\0','\0','\23','\64',
'\0','\128','\76','\131','\66','\6','\93','\67','\0','\1','\34','\130','\0','\0','\163','\130','\253','\127','\5','\2','\128',
'\0','\202','\1','\130','\133','\6','\2','\67','\1','\202','\1','\2','\134','\6','\66','\67','\1','\202','\1','\130','\134',
'\202','\193','\67','\135','\6','\2','\68','\0','\7','\66','\68','\4','\69','\2','\128','\1','\128','\2','\128','\3','\29',
'\66','\128','\1','\162','\128','\0','\0','\35','\193','\245','\127','\31','\0','\128','\0','\18','\0','\0','\0','\4','\10',
'\0','\0','\0','\0','\0','\0','\0','\119','\111','\114','\107','\115','\112','\97','\99','\101','\0','\4','\15','\0','\0',
'\0','\0','\0','\0','\0','\70','\105','\110','\100','\70','\105','\114','\115','\116','\67','\104','\105','\108','\100','\0',
'\4','\5','\0','\0','\0','\0','\0','\0','\0','\78','\97','\109','\101','\0','\4','\6','\0','\0','\0','\0','\0','\0','\0',
'\112','\97','\105','\114','\115','\0','\4','\12','\0','\0','\0','\0','\0','\0','\0','\71','\101','\116','\67','\104','\105',
'\108','\100','\114','\101','\110','\0','\4','\4','\0','\0','\0','\0','\0','\0','\0','\73','\115','\65','\0','\4','\5','\0',
'\0','\0','\0','\0','\0','\0','\80','\97','\114','\116','\0','\4','\9','\0','\0','\0','\0','\0','\0','\0','\77','\101','\115',
'\104','\80','\97','\114','\116','\0','\4','\6','\0','\0','\0','\0','\0','\0','\0','\67','\108','\111','\110','\101','\0',
'\4','\6','\0','\0','\0','\0','\0','\0','\0','\68','\101','\99','\97','\108','\0','\4','\8','\0','\0','\0','\0','\0','\0',
'\0','\68','\101','\115','\116','\114','\111','\121','\0','\4','\7','\0','\0','\0','\0','\0','\0','\0','\80','\97','\114',
'\101','\110','\116','\0','\4','\9','\0','\0','\0','\0','\0','\0','\0','\77','\97','\116','\101','\114','\105','\97','\108',
'\0','\4','\6','\0','\0','\0','\0','\0','\0','\0','\67','\111','\108','\111','\114','\0','\4','\9','\0','\0','\0','\0','\0',
'\0','\0','\65','\110','\99','\104','\111','\114','\101','\100','\0','\1','\1','\4','\6','\0','\0','\0','\0','\0','\0','\0',
'\116','\97','\98','\108','\101','\0','\4','\7','\0','\0','\0','\0','\0','\0','\0','\105','\110','\115','\101','\114','\116',
'\0','\0','\0','\0','\0','\4','\0','\0','\0','\0','\0','\1','\9','\1','\7','\1','\10','\10','\0','\0','\0','\0','\0','\0',
'\0','\64','\109','\97','\105','\110','\46','\108','\117','\97','\0','\52','\0','\0','\0','\35','\0','\0','\0','\35','\0',
'\0','\0','\35','\0','\0','\0','\35','\0','\0','\0','\37','\0','\0','\0','\37','\0','\0','\0','\38','\0','\0','\0','\38',
'\0','\0','\0','\38','\0','\0','\0','\38','\0','\0','\0','\38','\0','\0','\0','\39','\0','\0','\0','\39','\0','\0','\0','\39',
'\0','\0','\0','\39','\0','\0','\0','\39','\0','\0','\0','\39','\0','\0','\0','\39','\0','\0','\0','\39','\0','\0','\0','\39',
'\0','\0','\0','\39','\0','\0','\0','\40','\0','\0','\0','\40','\0','\0','\0','\42','\0','\0','\0','\42','\0','\0','\0','\42',
'\0','\0','\0','\42','\0','\0','\0','\42','\0','\0','\0','\43','\0','\0','\0','\43','\0','\0','\0','\43','\0','\0','\0','\43',
'\0','\0','\0','\43','\0','\0','\0','\44','\0','\0','\0','\44','\0','\0','\0','\42','\0','\0','\0','\42','\0','\0','\0','\48',
'\0','\0','\0','\48','\0','\0','\0','\49','\0','\0','\0','\49','\0','\0','\0','\50','\0','\0','\0','\50','\0','\0','\0','\51',
'\0','\0','\0','\53','\0','\0','\0','\53','\0','\0','\0','\53','\0','\0','\0','\53','\0','\0','\0','\53','\0','\0','\0','\38',
'\0','\0','\0','\38','\0','\0','\0','\57','\0','\0','\0','\13','\0','\0','\0','\7','\0','\0','\0','\0','\0','\0','\0','\112',
'\108','\97','\121','\101','\114','\0','\0','\0','\0','\0','\52','\0','\0','\0','\10','\0','\0','\0','\0','\0','\0','\0',
'\67','\104','\97','\114','\97','\99','\116','\101','\114','\0','\4','\0','\0','\0','\52','\0','\0','\0','\16','\0','\0',
'\0','\0','\0','\0','\0','\40','\102','\111','\114','\32','\103','\101','\110','\101','\114','\97','\116','\111','\114','\41',
'\0','\10','\0','\0','\0','\51','\0','\0','\0','\12','\0','\0','\0','\0','\0','\0','\0','\40','\102','\111','\114','\32',
'\115','\116','\97','\116','\101','\41','\0','\10','\0','\0','\0','\51','\0','\0','\0','\14','\0','\0','\0','\0','\0','\0',
'\0','\40','\102','\111','\114','\32','\99','\111','\110','\116','\114','\111','\108','\41','\0','\10','\0','\0','\0','\51',
'\0','\0','\0','\2','\0','\0','\0','\0','\0','\0','\0','\95','\0','\11','\0','\0','\0','\49','\0','\0','\0','\5','\0','\0',
'\0','\0','\0','\0','\0','\80','\97','\114','\116','\0','\11','\0','\0','\0','\49','\0','\0','\0','\6','\0','\0','\0','\0',
'\0','\0','\0','\67','\104','\97','\115','\109','\0','\23','\0','\0','\0','\49','\0','\0','\0','\16','\0','\0','\0','\0',
'\0','\0','\0','\40','\102','\111','\114','\32','\103','\101','\110','\101','\114','\97','\116','\111','\114','\41','\0',
'\27','\0','\0','\0','\37','\0','\0','\0','\12','\0','\0','\0','\0','\0','\0','\0','\40','\102','\111','\114','\32','\115',
'\116','\97','\116','\101','\41','\0','\27','\0','\0','\0','\37','\0','\0','\0','\14','\0','\0','\0','\0','\0','\0','\0',
'\40','\102','\111','\114','\32','\99','\111','\110','\116','\114','\111','\108','\41','\0','\27','\0','\0','\0','\37','\0',
'\0','\0','\2','\0','\0','\0','\0','\0','\0','\0','\95','\0','\28','\0','\0','\0','\35','\0','\0','\0','\6','\0','\0','\0',
'\0','\0','\0','\0','\67','\104','\105','\108','\100','\0','\28','\0','\0','\0','\35','\0','\0','\0','\4','\0','\0','\0',
'\5','\0','\0','\0','\0','\0','\0','\0','\95','\69','\78','\86','\0','\14','\0','\0','\0','\0','\0','\0','\0','\86','\105',
'\101','\119','\112','\111','\114','\116','\70','\114','\97','\109','\101','\0','\9','\0','\0','\0','\0','\0','\0','\0','\83',
'\101','\116','\116','\105','\110','\103','\115','\0','\7','\0','\0','\0','\0','\0','\0','\0','\67','\104','\97','\115','\109',
'\115','\0','\59','\0','\0','\0','\65','\0','\0','\0','\0','\0','\7','\11','\0','\0','\0','\6','\0','\64','\0','\69','\0',
'\128','\0','\29','\0','\1','\1','\23','\64','\0','\128','\76','\65','\64','\2','\93','\65','\0','\1','\34','\128','\0','\0',
'\163','\192','\254','\127','\11','\0','\0','\0','\9','\0','\128','\0','\31','\0','\128','\0','\2','\0','\0','\0','\4','\6',
'\0','\0','\0','\0','\0','\0','\0','\112','\97','\105','\114','\115','\0','\4','\8','\0','\0','\0','\0','\0','\0','\0','\68',
'\101','\115','\116','\114','\111','\121','\0','\0','\0','\0','\0','\2','\0','\0','\0','\0','\0','\1','\10','\10','\0','\0',
'\0','\0','\0','\0','\0','\64','\109','\97','\105','\110','\46','\108','\117','\97','\0','\11','\0','\0','\0','\60','\0',
'\0','\0','\60','\0','\0','\0','\60','\0','\0','\0','\60','\0','\0','\0','\61','\0','\0','\0','\61','\0','\0','\0','\60',
'\0','\0','\0','\60','\0','\0','\0','\64','\0','\0','\0','\64','\0','\0','\0','\65','\0','\0','\0','\5','\0','\0','\0','\16',
'\0','\0','\0','\0','\0','\0','\0','\40','\102','\111','\114','\32','\103','\101','\110','\101','\114','\97','\116','\111',
'\114','\41','\0','\3','\0','\0','\0','\8','\0','\0','\0','\12','\0','\0','\0','\0','\0','\0','\0','\40','\102','\111','\114',
'\32','\115','\116','\97','\116','\101','\41','\0','\3','\0','\0','\0','\8','\0','\0','\0','\14','\0','\0','\0','\0','\0',
'\0','\0','\40','\102','\111','\114','\32','\99','\111','\110','\116','\114','\111','\108','\41','\0','\3','\0','\0','\0',
'\8','\0','\0','\0','\2','\0','\0','\0','\0','\0','\0','\0','\95','\0','\4','\0','\0','\0','\6','\0','\0','\0','\6','\0',
'\0','\0','\0','\0','\0','\0','\67','\104','\97','\115','\109','\0','\4','\0','\0','\0','\6','\0','\0','\0','\2','\0','\0',
'\0','\5','\0','\0','\0','\0','\0','\0','\0','\95','\69','\78','\86','\0','\7','\0','\0','\0','\0','\0','\0','\0','\67','\104',
'\97','\115','\109','\115','\0','\70','\0','\0','\0','\74','\0','\0','\0','\1','\0','\6','\18','\0','\0','\0','\70','\0',
'\64','\0','\76','\64','\192','\0','\193','\128','\0','\0','\93','\128','\128','\1','\71','\192','\192','\0','\71','\0','\193',
'\0','\71','\0','\128','\0','\71','\64','\193','\0','\134','\0','\64','\0','\140','\64','\64','\1','\1','\129','\0','\0',
'\157','\128','\128','\1','\135','\128','\65','\1','\135','\192','\65','\1','\204','\0','\66','\1','\64','\1','\128','\0',
'\221','\64','\128','\1','\31','\0','\128','\0','\9','\0','\0','\0','\4','\5','\0','\0','\0','\0','\0','\0','\0','\103','\97',
'\109','\101','\0','\4','\11','\0','\0','\0','\0','\0','\0','\0','\71','\101','\116','\83','\101','\114','\118','\105','\99',
'\101','\0','\4','\10','\0','\0','\0','\0','\0','\0','\0','\87','\111','\114','\107','\115','\112','\97','\99','\101','\0',
'\4','\13','\0','\0','\0','\0','\0','\0','\0','\80','\114','\105','\115','\111','\110','\95','\73','\84','\69','\77','\83',
'\0','\4','\6','\0','\0','\0','\0','\0','\0','\0','\103','\105','\118','\101','\114','\0','\4','\11','\0','\0','\0','\0',
'\0','\0','\0','\73','\84','\69','\77','\80','\73','\67','\75','\85','\80','\0','\4','\7','\0','\0','\0','\0','\0','\0','\0',
'\82','\101','\109','\111','\116','\101','\0','\4','\12','\0','\0','\0','\0','\0','\0','\0','\73','\116','\101','\109','\72',
'\97','\110','\100','\108','\101','\114','\0','\4','\13','\0','\0','\0','\0','\0','\0','\0','\73','\110','\118','\111','\107',
'\101','\83','\101','\114','\118','\101','\114','\0','\0','\0','\0','\0','\1','\0','\0','\0','\0','\0','\10','\0','\0','\0',
'\0','\0','\0','\0','\64','\109','\97','\105','\110','\46','\108','\117','\97','\0','\18','\0','\0','\0','\71','\0','\0',
'\0','\71','\0','\0','\0','\71','\0','\0','\0','\71','\0','\0','\0','\71','\0','\0','\0','\71','\0','\0','\0','\71','\0',
'\0','\0','\71','\0','\0','\0','\72','\0','\0','\0','\72','\0','\0','\0','\72','\0','\0','\0','\72','\0','\0','\0','\72',
'\0','\0','\0','\72','\0','\0','\0','\73','\0','\0','\0','\73','\0','\0','\0','\73','\0','\0','\0','\74','\0','\0','\0','\3',
'\0','\0','\0','\14','\0','\0','\0','\0','\0','\0','\0','\99','\117','\114','\114','\101','\110','\116','\79','\112','\116',
'\105','\111','\110','\0','\0','\0','\0','\0','\18','\0','\0','\0','\4','\0','\0','\0','\0','\0','\0','\0','\65','\95','\49',
'\0','\8','\0','\0','\0','\18','\0','\0','\0','\6','\0','\0','\0','\0','\0','\0','\0','\69','\118','\101','\110','\116','\0',
'\14','\0','\0','\0','\18','\0','\0','\0','\1','\0','\0','\0','\5','\0','\0','\0','\0','\0','\0','\0','\95','\69','\78','\86',
'\0','\76','\0','\0','\0','\94','\0','\0','\0','\1','\0','\6','\60','\0','\0','\0','\68','\0','\0','\0','\134','\0','\64',
'\0','\140','\64','\64','\1','\1','\129','\0','\0','\157','\128','\128','\1','\135','\192','\64','\1','\135','\0','\65','\1',
'\140','\64','\65','\1','\0','\1','\0','\0','\157','\128','\128','\1','\155','\0','\0','\0','\23','\192','\2','\128','\134',
'\128','\65','\0','\198','\0','\64','\0','\204','\64','\192','\1','\65','\129','\0','\0','\221','\128','\128','\1','\199',
'\192','\192','\1','\199','\0','\193','\1','\199','\0','\128','\1','\199','\192','\193','\1','\157','\128','\0','\1','\64',
'\0','\0','\1','\23','\64','\5','\128','\134','\0','\64','\0','\140','\64','\64','\1','\1','\129','\0','\0','\157','\128',
'\128','\1','\135','\192','\64','\1','\135','\0','\66','\1','\140','\64','\65','\1','\0','\1','\0','\0','\157','\128','\128',
'\1','\155','\0','\0','\0','\23','\128','\2','\128','\134','\128','\65','\0','\198','\0','\64','\0','\204','\64','\192','\1',
'\65','\129','\0','\0','\221','\128','\128','\1','\199','\192','\192','\1','\199','\0','\194','\1','\199','\0','\128','\1',
'\199','\192','\193','\1','\157','\128','\0','\1','\64','\0','\0','\1','\88','\64','\194','\0','\23','\128','\2','\128','\74',
'\192','\66','\133','\74','\192','\66','\134','\74','\192','\194','\134','\74','\192','\67','\135','\74','\64','\68','\136',
'\134','\192','\68','\0','\135','\0','\69','\1','\74','\128','\0','\137','\74','\128','\197','\138','\74','\0','\198','\139',
'\74','\128','\198','\140','\31','\0','\128','\0','\27','\0','\0','\0','\4','\5','\0','\0','\0','\0','\0','\0','\0','\103',
'\97','\109','\101','\0','\4','\11','\0','\0','\0','\0','\0','\0','\0','\71','\101','\116','\83','\101','\114','\118','\105',
'\99','\101','\0','\4','\8','\0','\0','\0','\0','\0','\0','\0','\80','\108','\97','\121','\101','\114','\115','\0','\4','\12',
'\0','\0','\0','\0','\0','\0','\0','\76','\111','\99','\97','\108','\80','\108','\97','\121','\101','\114','\0','\4','\9',
'\0','\0','\0','\0','\0','\0','\0','\66','\97','\99','\107','\112','\97','\99','\107','\0','\4','\15','\0','\0','\0','\0',
'\0','\0','\0','\70','\105','\110','\100','\70','\105','\114','\115','\116','\67','\104','\105','\108','\100','\0','\4','\8',
'\0','\0','\0','\0','\0','\0','\0','\114','\101','\113','\117','\105','\114','\101','\0','\4','\10','\0','\0','\0','\0','\0',
'\0','\0','\71','\117','\110','\83','\116','\97','\116','\101','\115','\0','\4','\10','\0','\0','\0','\0','\0','\0','\0',
'\67','\104','\97','\114','\97','\99','\116','\101','\114','\0','\0','\4','\8','\0','\0','\0','\0','\0','\0','\0','\77','\97',
'\120','\65','\109','\109','\111','\0','\3','\0','\0','\0','\0','\132','\215','\151','\65','\4','\12','\0','\0','\0','\0',
'\0','\0','\0','\67','\117','\114','\114','\101','\110','\116','\65','\109','\109','\111','\0','\4','\11','\0','\0','\0',
'\0','\0','\0','\0','\83','\116','\111','\114','\101','\100','\65','\109','\109','\111','\0','\4','\9','\0','\0','\0','\0',
'\0','\0','\0','\70','\105','\114','\101','\82','\97','\116','\101','\0','\3','\51','\51','\51','\51','\51','\51','\211',
'\63','\4','\7','\0','\0','\0','\0','\0','\0','\0','\83','\112','\114','\101','\97','\100','\0','\3','\0','\0','\0','\0',
'\0','\0','\0','\0','\4','\6','\0','\0','\0','\0','\0','\0','\0','\82','\97','\110','\103','\101','\0','\4','\5','\0','\0',
'\0','\0','\0','\0','\0','\109','\97','\116','\104','\0','\4','\5','\0','\0','\0','\0','\0','\0','\0','\104','\117','\103',
'\101','\0','\4','\8','\0','\0','\0','\0','\0','\0','\0','\66','\117','\108','\108','\101','\116','\115','\0','\3','\0','\0',
'\0','\0','\0','\0','\36','\64','\4','\11','\0','\0','\0','\0','\0','\0','\0','\82','\101','\108','\111','\97','\100','\84',
'\105','\109','\101','\0','\3','\141','\237','\181','\160','\247','\198','\176','\62','\4','\9','\0','\0','\0','\0','\0',
'\0','\0','\65','\117','\116','\111','\70','\105','\114','\101','\0','\1','\1','\0','\0','\0','\0','\1','\0','\0','\0','\0',
'\0','\10','\0','\0','\0','\0','\0','\0','\0','\64','\109','\97','\105','\110','\46','\108','\117','\97','\0','\60','\0',
'\0','\0','\77','\0','\0','\0','\78','\0','\0','\0','\78','\0','\0','\0','\78','\0','\0','\0','\78','\0','\0','\0','\78',
'\0','\0','\0','\78','\0','\0','\0','\78','\0','\0','\0','\78','\0','\0','\0','\78','\0','\0','\0','\78','\0','\0','\0','\78',
'\0','\0','\0','\79','\0','\0','\0','\79','\0','\0','\0','\79','\0','\0','\0','\79','\0','\0','\0','\79','\0','\0','\0','\79',
'\0','\0','\0','\79','\0','\0','\0','\79','\0','\0','\0','\79','\0','\0','\0','\79','\0','\0','\0','\79','\0','\0','\0','\79',
'\0','\0','\0','\80','\0','\0','\0','\80','\0','\0','\0','\80','\0','\0','\0','\80','\0','\0','\0','\80','\0','\0','\0','\80',
'\0','\0','\0','\80','\0','\0','\0','\80','\0','\0','\0','\80','\0','\0','\0','\80','\0','\0','\0','\80','\0','\0','\0','\81',
'\0','\0','\0','\81','\0','\0','\0','\81','\0','\0','\0','\81','\0','\0','\0','\81','\0','\0','\0','\81','\0','\0','\0','\81',
'\0','\0','\0','\81','\0','\0','\0','\81','\0','\0','\0','\81','\0','\0','\0','\81','\0','\0','\0','\83','\0','\0','\0','\83',
'\0','\0','\0','\84','\0','\0','\0','\85','\0','\0','\0','\86','\0','\0','\0','\87','\0','\0','\0','\88','\0','\0','\0','\89',
'\0','\0','\0','\89','\0','\0','\0','\89','\0','\0','\0','\90','\0','\0','\0','\91','\0','\0','\0','\92','\0','\0','\0','\94',
'\0','\0','\0','\2','\0','\0','\0','\7','\0','\0','\0','\0','\0','\0','\0','\119','\101','\97','\112','\111','\110','\0',
'\0','\0','\0','\0','\60','\0','\0','\0','\7','\0','\0','\0','\0','\0','\0','\0','\109','\111','\100','\117','\108','\101',
'\0','\1','\0','\0','\0','\60','\0','\0','\0','\1','\0','\0','\0','\5','\0','\0','\0','\0','\0','\0','\0','\95','\69','\78',
'\86','\0','\97','\0','\0','\0','\112','\0','\0','\0','\0','\0','\8','\45','\0','\0','\0','\6','\0','\64','\0','\24','\64',
'\64','\0','\23','\128','\8','\128','\8','\128','\64','\128','\6','\192','\64','\0','\12','\0','\65','\0','\129','\64','\1',
'\0','\29','\128','\128','\1','\7','\128','\65','\0','\12','\192','\65','\0','\29','\128','\0','\1','\27','\0','\0','\0',
'\23','\128','\7','\128','\6','\0','\66','\0','\29','\64','\128','\0','\6','\64','\66','\0','\70','\192','\64','\0','\76',
'\0','\193','\0','\193','\128','\2','\0','\93','\128','\128','\1','\76','\192','\194','\0','\93','\0','\0','\1','\29','\0',
'\1','\0','\23','\64','\2','\128','\70','\193','\64','\0','\76','\1','\193','\2','\193','\129','\2','\0','\93','\129','\128',
'\1','\71','\1','\195','\2','\88','\64','\1','\2','\23','\128','\0','\128','\70','\65','\67','\0','\128','\1','\0','\2','\93',
'\65','\0','\1','\34','\128','\0','\0','\163','\192','\252','\127','\23','\128','\247','\127','\23','\64','\1','\128','\6',
'\0','\64','\0','\24','\128','\64','\0','\23','\128','\0','\128','\6','\128','\67','\0','\65','\192','\3','\0','\29','\64',
'\0','\1','\31','\0','\128','\0','\16','\0','\0','\0','\4','\8','\0','\0','\0','\0','\0','\0','\0','\101','\110','\97','\98',
'\108','\101','\100','\0','\1','\0','\1','\1','\4','\5','\0','\0','\0','\0','\0','\0','\0','\103','\97','\109','\101','\0',
'\4','\11','\0','\0','\0','\0','\0','\0','\0','\71','\101','\116','\83','\101','\114','\118','\105','\99','\101','\0','\4',
'\11','\0','\0','\0','\0','\0','\0','\0','\82','\117','\110','\83','\101','\114','\118','\105','\99','\101','\0','\4','\14',
'\0','\0','\0','\0','\0','\0','\0','\82','\101','\110','\100','\101','\114','\83','\116','\101','\112','\112','\101','\100',
'\0','\4','\5','\0','\0','\0','\0','\0','\0','\0','\87','\97','\105','\116','\0','\4','\12','\0','\0','\0','\0','\0','\0',
'\0','\99','\108','\101','\97','\114','\67','\104','\97','\115','\109','\115','\0','\4','\6','\0','\0','\0','\0','\0','\0',
'\0','\112','\97','\105','\114','\115','\0','\4','\8','\0','\0','\0','\0','\0','\0','\0','\80','\108','\97','\121','\101',
'\114','\115','\0','\4','\11','\0','\0','\0','\0','\0','\0','\0','\71','\101','\116','\80','\108','\97','\121','\101','\114',
'\115','\0','\4','\12','\0','\0','\0','\0','\0','\0','\0','\76','\111','\99','\97','\108','\80','\108','\97','\121','\101',
'\114','\0','\4','\14','\0','\0','\0','\0','\0','\0','\0','\103','\101','\110','\101','\114','\97','\116','\101','\67','\104',
'\97','\115','\109','\0','\4','\6','\0','\0','\0','\0','\0','\0','\0','\112','\114','\105','\110','\116','\0','\4','\22',
'\0','\0','\0','\0','\0','\0','\0','\69','\115','\112','\32','\65','\108','\114','\101','\97','\100','\121','\32','\97','\99',
'\116','\105','\118','\97','\116','\101','\100','\0','\0','\0','\0','\0','\1','\0','\0','\0','\0','\0','\10','\0','\0','\0',
'\0','\0','\0','\0','\64','\109','\97','\105','\110','\46','\108','\117','\97','\0','\45','\0','\0','\0','\98','\0','\0',
'\0','\98','\0','\0','\0','\98','\0','\0','\0','\99','\0','\0','\0','\100','\0','\0','\0','\100','\0','\0','\0','\100','\0',
'\0','\0','\100','\0','\0','\0','\100','\0','\0','\0','\100','\0','\0','\0','\100','\0','\0','\0','\100','\0','\0','\0','\100',
'\0','\0','\0','\101','\0','\0','\0','\101','\0','\0','\0','\103','\0','\0','\0','\103','\0','\0','\0','\103','\0','\0','\0',
'\103','\0','\0','\0','\103','\0','\0','\0','\103','\0','\0','\0','\103','\0','\0','\0','\103','\0','\0','\0','\103','\0',
'\0','\0','\104','\0','\0','\0','\104','\0','\0','\0','\104','\0','\0','\0','\104','\0','\0','\0','\104','\0','\0','\0','\104',
'\0','\0','\0','\104','\0','\0','\0','\105','\0','\0','\0','\105','\0','\0','\0','\105','\0','\0','\0','\103','\0','\0','\0',
'\103','\0','\0','\0','\107','\0','\0','\0','\108','\0','\0','\0','\109','\0','\0','\0','\109','\0','\0','\0','\109','\0',
'\0','\0','\110','\0','\0','\0','\110','\0','\0','\0','\110','\0','\0','\0','\112','\0','\0','\0','\5','\0','\0','\0','\16',
'\0','\0','\0','\0','\0','\0','\0','\40','\102','\111','\114','\32','\103','\101','\110','\101','\114','\97','\116','\111',
'\114','\41','\0','\23','\0','\0','\0','\36','\0','\0','\0','\12','\0','\0','\0','\0','\0','\0','\0','\40','\102','\111',
'\114','\32','\115','\116','\97','\116','\101','\41','\0','\23','\0','\0','\0','\36','\0','\0','\0','\14','\0','\0','\0',
'\0','\0','\0','\0','\40','\102','\111','\114','\32','\99','\111','\110','\116','\114','\111','\108','\41','\0','\23','\0',
'\0','\0','\36','\0','\0','\0','\2','\0','\0','\0','\0','\0','\0','\0','\95','\0','\24','\0','\0','\0','\34','\0','\0','\0',
'\7','\0','\0','\0','\0','\0','\0','\0','\80','\108','\97','\121','\101','\114','\0','\24','\0','\0','\0','\34','\0','\0',
'\0','\1','\0','\0','\0','\5','\0','\0','\0','\0','\0','\0','\0','\95','\69','\78','\86','\0','\114','\0','\0','\0','\116',
'\0','\0','\0','\0','\0','\2','\6','\0','\0','\0','\6','\0','\64','\0','\7','\64','\64','\0','\7','\128','\64','\0','\12',
'\192','\64','\0','\29','\64','\0','\1','\31','\0','\128','\0','\4','\0','\0','\0','\4','\5','\0','\0','\0','\0','\0','\0',
'\0','\103','\97','\109','\101','\0','\4','\10','\0','\0','\0','\0','\0','\0','\0','\87','\111','\114','\107','\115','\112',
'\97','\99','\101','\0','\4','\6','\0','\0','\0','\0','\0','\0','\0','\68','\111','\111','\114','\115','\0','\4','\8','\0',
'\0','\0','\0','\0','\0','\0','\68','\101','\115','\116','\114','\111','\121','\0','\0','\0','\0','\0','\1','\0','\0','\0',
'\0','\0','\10','\0','\0','\0','\0','\0','\0','\0','\64','\109','\97','\105','\110','\46','\108','\117','\97','\0','\6','\0',
'\0','\0','\115','\0','\0','\0','\115','\0','\0','\0','\115','\0','\0','\0','\115','\0','\0','\0','\115','\0','\0','\0','\116',
'\0','\0','\0','\0','\0','\0','\0','\1','\0','\0','\0','\5','\0','\0','\0','\0','\0','\0','\0','\95','\69','\78','\86','\0',
'\118','\0','\0','\0','\120','\0','\0','\0','\0','\0','\5','\13','\0','\0','\0','\6','\0','\64','\0','\7','\64','\64','\0',
'\7','\128','\64','\0','\7','\192','\64','\0','\7','\0','\65','\0','\70','\64','\65','\0','\71','\128','\193','\0','\129',
'\192','\1','\0','\193','\0','\2','\0','\1','\65','\2','\0','\93','\128','\0','\2','\10','\64','\128','\130','\31','\0','\128',
'\0','\10','\0','\0','\0','\4','\5','\0','\0','\0','\0','\0','\0','\0','\103','\97','\109','\101','\0','\4','\8','\0','\0',
'\0','\0','\0','\0','\0','\80','\108','\97','\121','\101','\114','\115','\0','\4','\12','\0','\0','\0','\0','\0','\0','\0',
'\76','\111','\99','\97','\108','\80','\108','\97','\121','\101','\114','\0','\4','\10','\0','\0','\0','\0','\0','\0','\0',
'\67','\104','\97','\114','\97','\99','\116','\101','\114','\0','\4','\17','\0','\0','\0','\0','\0','\0','\0','\72','\117',
'\109','\97','\110','\111','\105','\100','\82','\111','\111','\116','\80','\97','\114','\116','\0','\4','\7','\0','\0','\0',
'\0','\0','\0','\0','\67','\70','\114','\97','\109','\101','\0','\4','\4','\0','\0','\0','\0','\0','\0','\0','\110','\101',
'\119','\0','\3','\159','\86','\209','\31','\218','\127','\141','\192','\3','\74','\232','\211','\207','\192','\9','\89',
'\64','\3','\250','\213','\28','\32','\120','\21','\160','\64','\0','\0','\0','\0','\1','\0','\0','\0','\0','\0','\10','\0',
'\0','\0','\0','\0','\0','\0','\64','\109','\97','\105','\110','\46','\108','\117','\97','\0','\13','\0','\0','\0','\119',
'\0','\0','\0','\119','\0','\0','\0','\119','\0','\0','\0','\119','\0','\0','\0','\119','\0','\0','\0','\119','\0','\0','\0',
'\119','\0','\0','\0','\119','\0','\0','\0','\119','\0','\0','\0','\119','\0','\0','\0','\119','\0','\0','\0','\119','\0',
'\0','\0','\120','\0','\0','\0','\0','\0','\0','\0','\1','\0','\0','\0','\5','\0','\0','\0','\0','\0','\0','\0','\95','\69',
'\78','\86','\0','\125','\0','\0','\0','\127','\0','\0','\0','\1','\0','\2','\7','\0','\0','\0','\70','\0','\64','\0','\71',
'\64','\192','\0','\71','\128','\192','\0','\71','\192','\192','\0','\71','\0','\193','\0','\74','\0','\128','\130','\31',
'\0','\128','\0','\6','\0','\0','\0','\4','\5','\0','\0','\0','\0','\0','\0','\0','\103','\97','\109','\101','\0','\4','\8',
'\0','\0','\0','\0','\0','\0','\0','\80','\108','\97','\121','\101','\114','\115','\0','\4','\12','\0','\0','\0','\0','\0',
'\0','\0','\76','\111','\99','\97','\108','\80','\108','\97','\121','\101','\114','\0','\4','\10','\0','\0','\0','\0','\0',
'\0','\0','\67','\104','\97','\114','\97','\99','\116','\101','\114','\0','\4','\9','\0','\0','\0','\0','\0','\0','\0','\72',
'\117','\109','\97','\110','\111','\105','\100','\0','\4','\10','\0','\0','\0','\0','\0','\0','\0','\87','\97','\108','\107',
'\83','\112','\101','\101','\100','\0','\0','\0','\0','\0','\1','\0','\0','\0','\0','\0','\10','\0','\0','\0','\0','\0','\0',
'\0','\64','\109','\97','\105','\110','\46','\108','\117','\97','\0','\7','\0','\0','\0','\126','\0','\0','\0','\126','\0',
'\0','\0','\126','\0','\0','\0','\126','\0','\0','\0','\126','\0','\0','\0','\126','\0','\0','\0','\127','\0','\0','\0','\1',
'\0','\0','\0','\2','\0','\0','\0','\0','\0','\0','\0','\115','\0','\0','\0','\0','\0','\7','\0','\0','\0','\1','\0','\0',
'\0','\5','\0','\0','\0','\0','\0','\0','\0','\95','\69','\78','\86','\0','\129','\0','\0','\0','\131','\0','\0','\0','\1',
'\0','\2','\7','\0','\0','\0','\70','\0','\64','\0','\71','\64','\192','\0','\71','\128','\192','\0','\71','\192','\192',
'\0','\71','\0','\193','\0','\74','\0','\128','\130','\31','\0','\128','\0','\6','\0','\0','\0','\4','\5','\0','\0','\0',
'\0','\0','\0','\0','\103','\97','\109','\101','\0','\4','\8','\0','\0','\0','\0','\0','\0','\0','\80','\108','\97','\121',
'\101','\114','\115','\0','\4','\12','\0','\0','\0','\0','\0','\0','\0','\76','\111','\99','\97','\108','\80','\108','\97',
'\121','\101','\114','\0','\4','\10','\0','\0','\0','\0','\0','\0','\0','\67','\104','\97','\114','\97','\99','\116','\101',
'\114','\0','\4','\9','\0','\0','\0','\0','\0','\0','\0','\72','\117','\109','\97','\110','\111','\105','\100','\0','\4',
'\10','\0','\0','\0','\0','\0','\0','\0','\74','\117','\109','\112','\80','\111','\119','\101','\114','\0','\0','\0','\0',
'\0','\1','\0','\0','\0','\0','\0','\10','\0','\0','\0','\0','\0','\0','\0','\64','\109','\97','\105','\110','\46','\108',
'\117','\97','\0','\7','\0','\0','\0','\130','\0','\0','\0','\130','\0','\0','\0','\130','\0','\0','\0','\130','\0','\0',
'\0','\130','\0','\0','\0','\130','\0','\0','\0','\131','\0','\0','\0','\1','\0','\0','\0','\2','\0','\0','\0','\0','\0',
'\0','\0','\115','\0','\0','\0','\0','\0','\7','\0','\0','\0','\1','\0','\0','\0','\5','\0','\0','\0','\0','\0','\0','\0',
'\95','\69','\78','\86','\0','\1','\0','\0','\0','\0','\0','\10','\0','\0','\0','\0','\0','\0','\0','\64','\109','\97','\105',
'\110','\46','\108','\117','\97','\0','\130','\0','\0','\0','\5','\0','\0','\0','\5','\0','\0','\0','\5','\0','\0','\0','\5',
'\0','\0','\0','\6','\0','\0','\0','\6','\0','\0','\0','\6','\0','\0','\0','\6','\0','\0','\0','\6','\0','\0','\0','\6','\0',
'\0','\0','\6','\0','\0','\0','\7','\0','\0','\0','\7','\0','\0','\0','\7','\0','\0','\0','\7','\0','\0','\0','\8','\0','\0',
'\0','\8','\0','\0','\0','\8','\0','\0','\0','\9','\0','\0','\0','\9','\0','\0','\0','\9','\0','\0','\0','\10','\0','\0',
'\0','\10','\0','\0','\0','\10','\0','\0','\0','\10','\0','\0','\0','\10','\0','\0','\0','\11','\0','\0','\0','\14','\0',
'\0','\0','\14','\0','\0','\0','\14','\0','\0','\0','\17','\0','\0','\0','\18','\0','\0','\0','\18','\0','\0','\0','\18',
'\0','\0','\0','\18','\0','\0','\0','\19','\0','\0','\0','\19','\0','\0','\0','\19','\0','\0','\0','\19','\0','\0','\0','\19',
'\0','\0','\0','\19','\0','\0','\0','\19','\0','\0','\0','\20','\0','\0','\0','\23','\0','\0','\0','\23','\0','\0','\0','\23',
'\0','\0','\0','\23','\0','\0','\0','\23','\0','\0','\0','\23','\0','\0','\0','\24','\0','\0','\0','\26','\0','\0','\0','\26',
'\0','\0','\0','\26','\0','\0','\0','\26','\0','\0','\0','\26','\0','\0','\0','\27','\0','\0','\0','\27','\0','\0','\0','\27',
'\0','\0','\0','\28','\0','\0','\0','\28','\0','\0','\0','\28','\0','\0','\0','\28','\0','\0','\0','\28','\0','\0','\0','\28',
'\0','\0','\0','\28','\0','\0','\0','\28','\0','\0','\0','\29','\0','\0','\0','\30','\0','\0','\0','\30','\0','\0','\0','\32',
'\0','\0','\0','\57','\0','\0','\0','\34','\0','\0','\0','\65','\0','\0','\0','\59','\0','\0','\0','\70','\0','\0','\0','\70',
'\0','\0','\0','\70','\0','\0','\0','\70','\0','\0','\0','\70','\0','\0','\0','\70','\0','\0','\0','\70','\0','\0','\0','\70',
'\0','\0','\0','\74','\0','\0','\0','\70','\0','\0','\0','\76','\0','\0','\0','\76','\0','\0','\0','\76','\0','\0','\0','\76',
'\0','\0','\0','\76','\0','\0','\0','\76','\0','\0','\0','\76','\0','\0','\0','\76','\0','\0','\0','\76','\0','\0','\0','\94',
'\0','\0','\0','\76','\0','\0','\0','\96','\0','\0','\0','\97','\0','\0','\0','\97','\0','\0','\0','\97','\0','\0','\0','\112',
'\0','\0','\0','\97','\0','\0','\0','\114','\0','\0','\0','\114','\0','\0','\0','\114','\0','\0','\0','\116','\0','\0','\0',
'\114','\0','\0','\0','\118','\0','\0','\0','\118','\0','\0','\0','\118','\0','\0','\0','\120','\0','\0','\0','\118','\0',
'\0','\0','\123','\0','\0','\0','\123','\0','\0','\0','\123','\0','\0','\0','\125','\0','\0','\0','\125','\0','\0','\0','\125',
'\0','\0','\0','\125','\0','\0','\0','\125','\0','\0','\0','\127','\0','\0','\0','\125','\0','\0','\0','\129','\0','\0','\0',
'\129','\0','\0','\0','\129','\0','\0','\0','\129','\0','\0','\0','\129','\0','\0','\0','\131','\0','\0','\0','\129','\0',
'\0','\0','\131','\0','\0','\0','\135','\0','\0','\0','\12','\0','\0','\0','\8','\0','\0','\0','\0','\0','\0','\0','\76',
'\105','\98','\114','\97','\114','\121','\0','\11','\0','\0','\0','\129','\0','\0','\0','\7','\0','\0','\0','\0','\0','\0',
'\0','\87','\105','\110','\100','\111','\119','\0','\15','\0','\0','\0','\129','\0','\0','\0','\5','\0','\0','\0','\0','\0',
'\0','\0','\77','\97','\105','\110','\0','\18','\0','\0','\0','\129','\0','\0','\0','\10','\0','\0','\0','\0','\0','\0','\0',
'\80','\108','\97','\121','\101','\114','\108','\111','\108','\0','\21','\0','\0','\0','\129','\0','\0','\0','\7','\0','\0',
'\0','\0','\0','\0','\0','\112','\108','\97','\121','\101','\114','\0','\26','\0','\0','\0','\129','\0','\0','\0','\10','\0',
'\0','\0','\0','\0','\0','\0','\99','\104','\97','\114','\97','\99','\116','\101','\114','\0','\27','\0','\0','\0','\129',
'\0','\0','\0','\9','\0','\0','\0','\0','\0','\0','\0','\83','\101','\99','\116','\105','\111','\110','\49','\0','\30','\0',
'\0','\0','\129','\0','\0','\0','\9','\0','\0','\0','\0','\0','\0','\0','\83','\101','\116','\116','\105','\110','\103','\115',
'\0','\43','\0','\0','\0','\129','\0','\0','\0','\10','\0','\0','\0','\0','\0','\0','\0','\83','\99','\114','\101','\101',
'\110','\71','\117','\105','\0','\49','\0','\0','\0','\129','\0','\0','\0','\14','\0','\0','\0','\0','\0','\0','\0','\86',
'\105','\101','\119','\112','\111','\114','\116','\70','\114','\97','\109','\101','\0','\55','\0','\0','\0','\129','\0','\0',
'\0','\7','\0','\0','\0','\0','\0','\0','\0','\67','\104','\97','\115','\109','\115','\0','\70','\0','\0','\0','\129','\0',
'\0','\0','\9','\0','\0','\0','\0','\0','\0','\0','\83','\101','\99','\116','\105','\111','\110','\50','\0','\114','\0','\0',
'\0','\129','\0','\0','\0','\1','\0','\0','\0','\5','\0','\0','\0','\0','\0','\0','\0','\95','\69','\78','\86','\0'}

local IlIIlIlIIIlllIlIlIIlIlIlIlIIIlIIIII = {
"ABC",  "ABx", "ABC",  "ABC",
"ABC",  "ABx", "ABC",  "ABx", 
"ABC",  "ABC", "ABC",  "ABC",
"ABC",  "ABC", "ABC",  "ABC",
"ABC",  "ABC", "ABC",  "ABC",
"ABC",  "ABC", "AsBx", "ABC",
"ABC",  "ABC", "ABC",  "ABC",
"ABC",  "ABC", "ABC",  "AsBx",
"AsBx", "ABC", "ABC", "ABC",
"ABx",  "ABC",}
local llllIIlIllIIlIllIIllIlIlIIlIIIllIlI = {
"MOVE",     "LOADK",     "LOADBOOL", "LOADNIL",
"GETUPVAL", "GETGLOBAL", "GETTABLE", "SETGLOBAL",
"SETUPVAL", "SETTABLE",  "NEWTABLE", "SELF",
"ADD",      "SUB",       "MUL",      "DIV",
"MOD",      "POW",       "UNM",      "NOT",
"LEN",      "CONCAT",    "JMP",      "EQ",
"LT",       "LE",        "TEST",     "TESTSET",
"CALL",     "TAILCALL",  "RETURN",   "FORLOOP",
"FORPREP",  "TFORLOOP",  "SETLIST",  "CLOSE",
"CLOSURE",  "VARARG"
};
local function get_bits(input, n, n2)
if n2 then
local total = 0
local digitn = 0
for i = n, n2 do
total = total + 2^digitn*get_bits(input, i)
digitn = digitn + 1
end
return total
else
local pn = 2^(n-1)
return (input % (pn + pn) >= pn) and 1 or 0
end
end
local function lIlIIIlllIlIIIIlIIIllIlIIIIIlIlIlll(IlIlllllllIllIlIllIlIlllIIIIIlIIlll)
local index = 1
local big_endian = false
local int_size;
local size_t;
local get_int, get_size_t;
local get_int8, get_int32, get_int64, get_float64, get_string;
do
function get_int8()
local a = IlIlllllllIllIlIllIlIlllIIIIIlIIlll:byte(index, index);
index = index + 1
return a
end
function get_int32()
local a, b, c, d = IlIlllllllIllIlIllIlIlllIIIIIlIIlll:byte(index, index + 3);
index = index + 4;
return d*16777216 + c*65536 + b*256 + a
end
function get_int64()
local a = get_int32();
local b = get_int32();
return b*4294967296 + a;
end
function get_float64()
local a = get_int32()
local b = get_int32()
return (-2*get_bits(b, 32)+1)*(2^(get_bits(b, 21, 31)-1023))*
((get_bits(b, 1, 20)*(2^32) + a)/(2^52)+1)
end
function get_string(len)
local str;
if len then
str = IlIlllllllIllIlIllIlIlllIIIIIlIIlll:sub(index, index + len - 1);
index = index + len;
else
len = get_size_t();
if len == 0 then return; end
str = IlIlllllllIllIlIllIlIlllIIIIIlIIlll:sub(index, index + len - 1);
index = index + len;
end
return str;
end
end
local function decode_chunk()
local chunk;
local instructions = {};
local constants    = {};
local prototypes   = {};
local debug = {
lines = {};
};
chunk = {
instructions = instructions;
constants    = constants;
prototypes   = prototypes;
debug = debug;
};
local num;
chunk.name       = get_string();
chunk.first_line = get_int();
chunk.last_line  = get_int();
if chunk.name then chunk.name = chunk.name:sub(1, -2); end
chunk.upvalues  = get_int8();
chunk.arguments = get_int8();
chunk.varg      = get_int8();
chunk.stack     = get_int8();
do
num = get_int();
for i = 1, num do
local instruction = {
};
local llIIlIlIIllllIlIlIlIIlIlIlIllllIllI   = get_int32();
local opcode = get_bits(llIIlIlIIllllIlIlIlIIlIlIlIllllIllI, 1, 6);
local type   = IlIIlIlIIIlllIlIlIIlIlIlIlIIIlIIIII[opcode + 1];
instruction.opcode = opcode;
instruction.type   = type;
instruction.A = get_bits(llIIlIlIIllllIlIlIlIIlIlIlIllllIllI, 7, 14);
if type == "ABC" then
instruction.B = get_bits(llIIlIlIIllllIlIlIlIIlIlIlIllllIllI, 24, 32);
instruction.C = get_bits(llIIlIlIIllllIlIlIlIIlIlIlIllllIllI, 15, 23);
elseif type == "ABx" then
instruction.Bx = get_bits(llIIlIlIIllllIlIlIlIIlIlIlIllllIllI, 15, 32);
elseif type == "AsBx" then
instruction.sBx = get_bits(llIIlIlIIllllIlIlIlIIlIlIlIllllIllI, 15, 32) - 131071;
end
instructions[i] = instruction;
end
end
do
num = get_int();
for i = 1, num do
local constant = {
};
local type = get_int8();
constant.type = type;
if type == 1 then
constant.llIIlIlIIllllIlIlIlIIlIlIlIllllIllI = (get_int8() ~= 0);
elseif type == 3 then
constant.llIIlIlIIllllIlIlIlIIlIlIlIllllIllI = get_float64();
elseif type == 4 then
constant.llIIlIlIIllllIlIlIlIIlIlIlIllllIllI = get_string():sub(1, -2);
end
constants[i-1] = constant;
end
end
do
num = get_int();
for i = 1, num do
prototypes[i-1] = decode_chunk();
end
end
do
local llIIlIlIIllllIlIlIlIIlIlIlIllllIllI = debug.lines
num = get_int();
for i = 1, num do
llIIlIlIIllllIlIlIlIIlIlIlIllllIllI[i] = get_int32();
end
num = get_int();
for i = 1, num do
get_string():sub(1, -2);
get_int32();
get_int32();
end
num = get_int();
for i = 1, num do
get_string();
end
end
return chunk;
end
do
assert(get_string(4) == "\27Lua", "S1MPLYS3C7RED: Bytecode expected");
assert(get_int8() == 0x51, "S1MPLYS3C7RED: Only lua5.1 is supported");
get_int8();
big_endian = (get_int8() == 0);
int_size = get_int8();
size_t   = get_int8();
if int_size == 4 then
get_int = get_int32;
elseif int_size == 8 then
get_int = get_int64;
else
error("");
end
if size_t == 4 then
get_size_t = get_int32;
elseif size_t == 8 then
get_size_t = get_int64;
else
error("");
end
assert(get_string(3) == "\4\8\0","S1MPLYS3C7RED: Unsupported platform");
end
return decode_chunk();
end
local function handle_return(...)
local c = select("#", ...)
local t = {...}
return c, t
end
local function IIllIllIlIIIIIIIIllIlIIIIlllIIIIIIl(IIllIlIIIlIlllllIIIlIIlllllIllllIlI, upvalues)
local instructions = IIllIlIIIlIlllllIIIlIIlllllIllllIlI.instructions;
local constants    = IIllIlIIIlIlllllIIIlIIlllllIllllIlI.constants;
local prototypes   = IIllIlIIIlIlllllIIIlIIlllllIllllIlI.prototypes;

local stack, top
local environment
local IP = 1;
local vararg, vararg_size 

local opcode_funcs = {
[0]  = function(instruction)
stack[instruction.A] = stack[instruction.B];
end,
[1]  = function(instruction)
stack[instruction.A] = constants[instruction.Bx].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI;
end,
[2]  = function(instruction)
stack[instruction.A] = instruction.B ~= 0
if instruction.C ~= 0 then
IP = IP + 1
end
end,
[3]  = function(instruction)
local stack = stack
for i = instruction.A, instruction.B do
stack[i] = nil
end
end,
[4] = function(instruction)
stack[instruction.A] = upvalues[instruction.B]
end,
[5]  = function(instruction)
local key = constants[instruction.Bx].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI;
stack[instruction.A] = environment[key];
end,
[6]  = function(instruction)
local C = instruction.C
local stack = stack
C = C > 255 and constants[C-256].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI or stack[C]
stack[instruction.A] = stack[instruction.B][C];
end,
[7]  = function(instruction)
local key = constants[instruction.Bx].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI;
environment[key] = stack[instruction.A];
end,
[8] = function (instruction)
upvalues[instruction.B] = stack[instruction.A]
end,
[9] = function (instruction)
local B = instruction.B;
local C = instruction.C;
local stack, constants = stack, constants;
B = B > 255 and constants[B-256].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI or stack[B];
C = C > 255 and constants[C-256].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI or stack[C];
stack[instruction.A][B] = C
end,
[10] = function (instruction)
stack[instruction.A] = {}
end,
[11] = function (instruction)
local A = instruction.A
local B = instruction.B
local C = instruction.C
local stack = stack
B = stack[B]
C = C > 255 and constants[C-256].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI or stack[C]
stack[A+1] = B
stack[A]   = B[C]
end,
[12] = function(instruction)
local B = instruction.B;
local C = instruction.C;
local stack, constants = stack, constants;
B = B > 255 and constants[B-256].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI or stack[B];
C = C > 255 and constants[C-256].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI or stack[C];
stack[instruction.A] = B+C;
end,
[13] = function(instruction)
local B = instruction.B;
local C = instruction.C;
local stack, constants = stack, constants;
B = B > 255 and constants[B-256].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI or stack[B];
C = C > 255 and constants[C-256].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI or stack[C];
stack[instruction.A] = B - C;	
end,
[14] = function(instruction)
local B = instruction.B;
local C = instruction.C;
local stack, constants = stack, constants;
B = B > 255 and constants[B-256].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI or stack[B];
C = C > 255 and constants[C-256].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI or stack[C];
stack[instruction.A] = B * C;
end,
[15] = function(instruction)
local B = instruction.B;
local C = instruction.C;
local stack, constants = stack, constants;
B = B > 255 and constants[B-256].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI or stack[B];
C = C > 255 and constants[C-256].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI or stack[C];
stack[instruction.A] = B / C;
end,
[16] = function(instruction)
local B = instruction.B;
local C = instruction.C;
local stack, constants = stack, constants;
B = B > 255 and constants[B-256].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI or stack[B];
C = C > 255 and constants[C-256].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI or stack[C];
stack[instruction.A] = B % C;		
end,
[17] = function(instruction)
local B = instruction.B;
local C = instruction.C;
local stack, constants = stack, constants;
B = B > 255 and constants[B-256].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI or stack[B];
C = C > 255 and constants[C-256].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI or stack[C];
stack[instruction.A] = B ^ C;		
end,
[18] = function(instruction)
stack[instruction.A] = -stack[instruction.B]
end,
[19] = function(instruction)
stack[instruction.A] = not stack[instruction.B]
end,
[20] = function(instruction)
stack[instruction.A] = #stack[instruction.B]
end,
[21] = function(instruction)
local B = instruction.B
local result = stack[B]
for i = B+1, instruction.C do
result = result .. stack[i] 
end
stack[instruction.A] = result
end,
[22] = function(instruction)
IP = IP + instruction.sBx
end,
[23] = function(instruction)
local A = instruction.A
local B = instruction.B
local C = instruction.C
local stack, constants = stack, constants
A = A ~= 0
B = B > 255 and constants[B-256].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI or stack[B]
C = C > 255 and constants[C-256].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI or stack[C]
if (B == C) ~= A then
IP = IP + 1
end
end,
[24] = function(instruction)
local A = instruction.A
local B = instruction.B
local C = instruction.C
local stack, constants = stack, constants
A = A ~= 0
B = B > 255 and constants[B-256].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI or stack[B]
C = C > 255 and constants[C-256].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI or stack[C]
if (B < C) ~= A then
IP = IP + 1
end		
end,
[25] = function(instruction)
local A = instruction.A
local B = instruction.B
local C = instruction.C
local stack, constants = stack, constants
A = A ~= 0
B = B > 255 and constants[B-256].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI or stack[B]
C = C > 255 and constants[C-256].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI or stack[C]
if (B <= C) ~= A then
IP = IP + 1
end		
end,
[26] = function(instruction)
if stack[instruction.A] == (instruction.C ~= 0) then
IP = IP + 1
end
end,
[27] = function(instruction)
local stack = stack
local B = stack[instruction.B]
if B == (instruction.C ~= 0) then
IP = IP + 1
else
stack[instruction.A] = B
end
end,
[28] = function(instruction)
local A = instruction.A;
local B = instruction.B;
local C = instruction.C;
local stack = stack;
local args, results;
local limit, loop
args = {};
if B ~= 1 then
if B ~= 0 then
limit = A+B-1;
else
limit = top
end
loop = 0
for i = A+1, limit do
loop = loop + 1
args[loop] = stack[i];
end
limit, results = handle_return(stack[A](unpack(args, 1, limit-A)))
else
limit, results = handle_return(stack[A]())
end
top = A - 1
if C ~= 1 then
if C ~= 0 then
limit = A+C-2;
else
limit = limit+A
end
loop = 0;
for i = A, limit do
loop = loop + 1;
stack[i] = results[loop];
end
end
end,
[29] = function (instruction)
local A = instruction.A;
local B = instruction.B;
local C = instruction.C;
local stack = stack;
local args, results;
local top, limit, loop = top
args = {};
if B ~= 1 then
if B ~= 0 then
limit = A+B-1;
else
limit = top
end
loop = 0
for i = A+1, limit do
loop = loop + 1
args[#args+1] = stack[i];
end
results = {stack[A](unpack(args, 1, limit-A))};
else
results = {stack[A]()};
end
return true, results
end,
[30] = function(instruction)
local A = instruction.A;
local B = instruction.B;
local stack = stack;
local limit;
local loop, IlllIlIIIIIlIIIlIllIIIIlIllIllIlIlI;
if B == 1 then
return true;
end
if B == 0 then
limit = top
else
limit = A + B - 2;
end
IlllIlIIIIIlIIIlIllIIIIlIllIllIlIlI = {};
local loop = 0
for i = A, limit do
loop = loop + 1
IlllIlIIIIIlIIIlIllIIIIlIllIllIlIlI[loop] = stack[i];
end
return true, IlllIlIIIIIlIIIlIllIIIIlIllIllIlIlI;
end,
[31] = function(instruction)
local A = instruction.A
local stack = stack
local step = stack[A+2]
local index = stack[A] + step 
stack[A] = index
if step > 0 then
if index <= stack[A+1] then
IP = IP + instruction.sBx
stack[A+3] = index
end
else
if index >= stack[A+1] then
IP = IP + instruction.sBx
stack[A+3] = index
end
end
end,
[32] = function(instruction)
local A = instruction.A
local stack = stack
stack[A] = stack[A] - stack[A+2]
IP = IP + instruction.sBx 
end,
[33] = function(instruction)
local A = instruction.A
local B = instruction.B
local C = instruction.C
local stack = stack
local offset = A+2
local result = {stack[A](stack[A+1], stack[A+2])}
for i = 1, C do
stack[offset+i] = result[i]
end
if stack[A+3] ~= nil then
stack[A+2] = stack[A+3]
else
IP = IP + 1
end
end,
[34] = function(instruction)
local A = instruction.A
local B = instruction.B
local C = instruction.C
local stack = stack
if C == 0 then
error("NYI: extended SETLIST")
else
local offset = (C - 1) * 50
local t = stack[A]
if B == 0 then
B = top
end
for i = 1, B do
t[offset+i] = stack[A+i]	
end				
end
end,
[35] = function(instruction)
io.stderr:write("NYI: CLOSE")
io.stderr:flush()
end,
[36] = function(instruction)
local proto = prototypes[instruction.Bx]
local instructions = instructions
local stack = stack
local indices = {}
local new_upvals = setmetatable({},
{
__index = function(t, k)
local upval = indices[k]
return upval.segment[upval.offset]
end,
__newindex = function(t, k, v)
local upval = indices[k]
upval.segment[upval.offset] = v
end
}
)
for i = 1, proto.upvalues do
local movement = instructions[IP]
if movement.opcode == 0 then
indices[i-1] = {segment = stack, offset = movement.B}
elseif instructions[IP].opcode == 4 then
indices[i-1] = {segment = upvalues, offset = movement.B}
end
IP = IP + 1
end
local _, func = IIllIllIlIIIIIIIIllIlIIIIlllIIIIIIl(proto, new_upvals)
stack[instruction.A] = func
end,
[37] = function(instruction)
local A = instruction.A
local B = instruction.B
local stack, vararg = stack, vararg

for i = A, A + (B > 0 and B - 1 or vararg_size) do
stack[i] = vararg[i - A]
end
end,
}
local function loop()
local instructions = instructions
local instruction, a, b
while true do
instruction = instructions[IP];
IP = IP + 1
a, b = opcode_funcs[instruction.opcode](instruction);
if a then
return b;
end
end
end
local IIIIIIIlIlIIlllIIlIlIIIllIIlIIIlIlI = {
get_stack = function()
return stack;
end;
get_IP = function()
return IP;
end
};
local function func(...)
local local_stack = {};
local ghost_stack = {};
top = -1
stack = setmetatable(local_stack, {
__index = ghost_stack;
__newindex = function(t, k, v)
if k > top and v then
top = k
end
ghost_stack[k] = v
end;
})
local args = {...};	
vararg = {}
vararg_size = select("#", ...) - 1
for i = 0, vararg_size do
local_stack[i] = args[i+1];
vararg[i] = args[i+1]
end
environment = getfenv();
IP = 1;
local thread = coroutine.create(loop)
local a, b = coroutine.resume(thread)
if a then
if b then
return unpack(b);
end
return;
else
local name = IIllIlIIIlIlllllIIIlIIlllllIllllIlI.name;
local line = IIllIlIIIlIlllllIIIlIIlllllIllllIlI.debug.lines[IP];
local err  = b:gsub("(.-:)", "");
local IlllIlIIIIIlIIIlIllIIIIlIllIllIlIlI = "";
IlllIlIIIIIlIIIlIllIIIIlIllIllIlIlI = IlllIlIIIIIlIIIlIllIIIIlIllIllIlIlI .. (name and name .. ":" or "");
IlllIlIIIIIlIIIlIllIIIIlIllIllIlIlI = IlllIlIIIIIlIIIlIllIIIIlIllIllIlIlI .. (line and line .. ":" or "");
IlllIlIIIIIlIIIlIllIIIIlIllIllIlIlI = IlllIlIIIIIlIIIlIllIIIIlIllIllIlIlI .. b
error(IlllIlIIIIIlIIIlIllIIIIlIllIllIlIlI, 0);
end
end
return IIIIIIIlIlIIlllIIlIlIIIllIIlIIIlIlI, func;
end
local lIlIlIlIlIllIIIllIlIIlllIIlllIlIIII = {
IlIIIIIIlIllIIlIlIIIllIllIIlllIllll = function(IlIlllllllIllIlIllIlIlllIIIIIlIIlll)
local IIllIlIIIlIlllllIIIlIIlllllIllllIlI = lIlIIIlllIlIIIIlIIIllIlIIIIIlIlIlll(IlIlllllllIllIlIllIlIlllIIIIIlIIlll);
local _, func = IIllIllIlIIIIIIIIllIlIIIIlllIIIIIIl(IIllIlIIIlIlllllIIIlIIlllllIllllIlI);
return func;
end;
utils = {
lIlIIIlllIlIIIIlIIIllIlIIIIIlIlIlll = lIlIIIlllIlIIIIlIIIllIlIIIIIlIlIlll;
IIllIllIlIIIIIIIIllIlIIIIlllIIIIIIl = IIllIllIlIIIIIIIIllIlIIIIlllIIIIIIl;
IlllIIIllIlllIlIIIllllIIllllIIllllI = function(IlIlllllllIllIlIllIlIlllIIIIIlIIlll)
local IIllIlIIIlIlllllIIIlIIlllllIllllIlI = lIlIIIlllIlIIIIlIIIllIlIIIIIlIlIlll(IlIlllllllIllIlIllIlIlllIIIIIlIIlll)
return IIllIllIlIIIIIIIIllIlIIIIlllIIIIIIl(IIllIlIIIlIlllllIIIlIIlllllIllllIlI);
end;
};
}
lIlIlIlIlIllIIIllIlIIlllIIlllIlIIII.IlIIIIIIlIllIIlIlIIIllIllIIlllIllll(table.concat(llIIlIlIIllllIlIlIlIIlIlIlIllllIllI, [[]]))()
